type AuditAction = variant {
  DocumentUploaded;
  ConsentGiven;
  SignerAdded;
  SignatureApplied;
  DocumentCompleted;
};
type AuditEntry = record {
  action : AuditAction;
  metadata : opt text;
  user_id : text;
  consent_given : opt bool;
  document_hash_after_action : opt text;
  timestamp : nat64;
  entry_id : text;
};
type DocumentMetadata = record {
  title : opt text;
  document_type : opt text;
  description : opt text;
  created_at : nat64;
  expires_at : opt nat64;
};
type DocumentRecord = record {
  participants : vec text;
  admin_id : text;
  metadata : DocumentMetadata;
  document_status : DocumentStatus;
  current_signers : vec text;
  timestamp_final : opt nat64;
  final_hash : opt text;
  original_hash : text;
  timestamp_original : nat64;
};
type DocumentStatus = variant { PartiallySigned; FullySigned; Pending };
type DocumentUploadRequest = record {
  title : opt text;
  participants : vec text;
  document_hash : text;
  document_type : opt text;
  document_id : text;
  description : opt text;
  expires_at : opt nat64;
};
type Error = variant {
  UpdateConflict : text;
  DocumentNotReady;
  InvalidInput : text;
  NotFound;
  ConsentRequired;
  Unauthorized;
  AlreadyExists;
};
type Result = variant { Ok; Err : Error };
type Result_1 = variant { Ok : vec AuditEntry; Err : Error };
type Result_2 = variant { Ok : DocumentRecord; Err : Error };
type Result_3 = variant { Ok : DocumentStatus; Err : Error };
type Result_4 = variant { Ok : record { vec text; vec text }; Err : Error };
type SigningRequest = record {
  document_id : text;
  signature_metadata : opt text;
  consent_acknowledged : bool;
};
type VerificationStatus = variant {
  Unrecorded;
  FinalMatch;
  NoMatch;
  OriginalMatch;
};
service : {
  add_participant : (text, text) -> (Result);
  get_audit_trail : (text) -> (Result_1) query;
  get_document_record : (text) -> (Result_2) query;
  get_document_status : (text) -> (Result_3) query;
  get_hashes : (text) -> (Result_2) query;
  get_signing_progress : (text) -> (Result_4) query;
  record_consent : (text) -> (Result);
  record_final_hash : (text, text) -> (Result);
  record_original_hash : (text, text) -> (Result);
  sign_document : (SigningRequest) -> (Result);
  upload_document : (DocumentUploadRequest) -> (Result);
  verify_hash : (text, text) -> (VerificationStatus) query;
}
