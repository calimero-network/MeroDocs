name: Deploy ICP Canister

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "mainnet"
        type: choice
        options:
          - mainnet
          - local
      cycles_amount:
        description: "Cycles (in trillions)"
        required: false
        default: "1.0"
        type: string

env:
  DFX_VERSION: "0.28.0"
  RUST_VERSION: "1.89.0"
  DFX_NETWORK: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'local' && 'local' || 'ic' }}

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./merodocs_registry

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
          target: wasm32-unknown-unknown
          override: true

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ./merodocs_registry/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install tools
        run: |
          sudo apt-get update && sudo apt-get install -y bc
          cargo install candid-extractor --version 0.1.4
          DFXVM_INIT_YES=true DFX_VERSION=${{ env.DFX_VERSION }} sh -c "$(curl -fsSL https://internetcomputer.org/install.sh)"
          echo "$HOME/.local/share/dfx/bin" >> $GITHUB_PATH

      - name: Verify DFX installation
        run: |
          source "$HOME/.local/share/dfx/env"
          dfx --version

      - name: Setup dfx identity
        if: env.DFX_NETWORK == 'ic'
        run: |
          source "$HOME/.local/share/dfx/env"
          echo "${{ secrets.DFX_IDENTITY_PEM }}" > identity.pem
          if dfx identity list | grep -q "deployment"; then
            dfx identity remove deployment
          fi
          dfx identity import deployment identity.pem --force
          dfx identity use deployment
          rm identity.pem

      - name: Start local dfx
        if: env.DFX_NETWORK == 'local'
        run: |
          source "$HOME/.local/share/dfx/env"
          dfx start --background --clean

      - name: Build canister
        run: |
          source "$HOME/.local/share/dfx/env"
          dfx build
          cargo build --target wasm32-unknown-unknown --release -p backend
          candid-extractor target/wasm32-unknown-unknown/release/backend.wasm > backend/backend.did

      - name: Deploy canister
        run: |
          source "$HOME/.local/share/dfx/env"
          if [ "${{ env.DFX_NETWORK }}" = "ic" ]; then
            CYCLES=$(echo "${{ github.event.inputs.cycles_amount }} * 1000000000000" | bc -l | cut -d. -f1)
            dfx deploy --network ic --with-cycles $CYCLES
          else
            dfx deploy
          fi

      - name: Get canister info
        run: |
          source "$HOME/.local/share/dfx/env"
          if [ "${{ env.DFX_NETWORK }}" = "ic" ]; then
            CANISTER_ID=$(dfx canister --network ic id backend)
            echo "**Canister ID**: $CANISTER_ID" >> $GITHUB_STEP_SUMMARY
            echo "**URL**: https://${CANISTER_ID}.icp0.io" >> $GITHUB_STEP_SUMMARY
          else
            CANISTER_ID=$(dfx canister id backend)
            echo "**Canister ID**: $CANISTER_ID" >> $GITHUB_STEP_SUMMARY
            echo "**URL**: http://localhost:4943/?canisterId=$CANISTER_ID" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Stop local dfx (cleanup)
        if: always() && env.DFX_NETWORK == 'local'
        run: |
          source "$HOME/.local/share/dfx/env"
          dfx stop